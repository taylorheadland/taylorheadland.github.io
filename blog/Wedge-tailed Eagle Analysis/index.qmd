---
title: "Relative abundance of Wedge-tailed Eagles in Australia"
description: |
  Eagles are cool, so lets find out where and how many there are across Australia!
date: ""
categories: 
  - modelling
freeze: true
format: html
editor_options:
  chunk_output_type: console
---

Throughout the time that I've been undertaking my PhD I've gained skills in data science and statistical programming, particularly with the language R. I started learning R during my Honours year, but have been able to take it to the next level with my PhD in terms of the complexity and scope of use. Although daunting at times, learning to code has been the most enjoyable part of my PhD and something that I look forward to hopefully doing as part of a job sometime in the future!

In this article I'm going to estimate the relative abundance of the Wedge-tailed Eagle in Australia using data from the community science platform, eBird. This platform boasts a staggering 1.3 billion records of birds across the globe, and is an invaluable conservation resource to study bird populations and how they change across time and space. I decided on the Wedge-tailed Eagle, because as a birder that specifically studies raptors, you can't get much cooler than an Eagle!

This analysis largely follows the work of Matt Strimas-Mackey and the wonderful work that he and the eBird team at Cornell University in America put together in the form of a best practices guide when working with eBird data. This has been an extremely helpful resources throughout my PhD and I couldn't have done a few of my chapters without it! Here is a link to the resource: <https://ebird.github.io/ebird-best-practices/>

Enough chit chat, lets get to the analysis!

First up, lets load the packages and data required for the analysis.

```{r package and data loading, message=FALSE, warning=FALSE}
library(tidyverse)
library(auk)
library(ebirdst)
library(auk)
library(gridExtra)
library(mccf1)
library(ranger)
library(scam)
library(sf)
library(terra)

# set a random number seed to insure the results are fully repeatable
set.seed(123)

# load in habitat variables for modelling - Land cover and elevation
habitat <- read_csv("data/Wedge-tailedEagle_environmental-variables_checklists.csv")

# load in zero-filled eBird data and combine with habitat data
checklists <- read_csv("data/checklists-zf_Wedge-tailedEagle.csv") %>% 
  inner_join(habitat, by = "checklist_id")

# load in the prediction grid
pred_grid <- read_csv("data/environmental-variables_prediction-grid.csv")
r <- rast("data/prediction-grid.tif") %>% 
  # this second rast() call removes all the values from the raster template
  rast()
crs <- st_crs(r)

```

Lets also load in a shapefile of Australia so that we can make pretty look maps of our predictions.

```{r}
study_region <- read_sf("Australia.shp")
```

Data within community science programs are often subject to spatial and temporal biases. Australia represents a fantastic example of spatial sampling bias, as illustrated below by the figure. The majority of eBird checklists fall into coastal areas where people live, instead of being evenly distributed across the landscape. Checklists also follow things like roads, which is evident by the line of checklists spanning the Stuart Highway from mid-South Australia up to the Northern Territory. People are usually more available on weekends to contribute to community science projects, and there are studies that document this 'Weekend effect'. To minimise these biases, we will perform spatiotemporal subsampling to the data by selecting a checklist for every week of the available data within a defined 3x3 km grid cell.

```{r}
# sample one checklist per 3km x 3km x 1 week grid for each year
# sample detection/non-detection independently 
checklists_ss <- grid_sample_stratified(checklists,
                                        obs_column = "species_observed",
                                        sample_by = "type")
```

Lastly, we will select the predictors for the model and hold aside some of the data to for model testing

```{r}
checklists_train <- checklists_ss %>% 
  filter(type == "train") %>% 
  # select only the columns to be used in the model
  select(species_observed, observation_count,
         year, day_of_year, hours_of_day,
         effort_hours, effort_distance_km, effort_speed_kmph,
         number_observers, 
         starts_with("pland_"),
         starts_with("ed_"),
         starts_with("elevation_"))
```

Now we are ready to model the data! We will use random forest models to achieve a prediction for the relative abundance of Wedge-tailed Eagles across Australia. The first model is a classification random forest that will achieve a measure of encounter rate, which is \_\_\_\_\_.

```{r}
# calculate detection frequency for the balance random forest
detection_freq <- mean(checklists_train$species_observed)

# train a random forest model for encounter rate
train_er <- select(checklists_train, -observation_count)
er_model <- ranger(formula =  as.factor(species_observed) ~ ., 
                   data = train_er,
                   importance = "impurity",
                   probability = TRUE,
                   replace = TRUE,
                   sample.fraction = c(detection_freq, detection_freq))

# select the mcc-f1 optimizing occurrence threshold
obs_pred <- tibble(obs = as.integer(train_er$species_observed), 
                   pred = er_model$predictions[, 2])
mcc_f1 <- mccf1(response = obs_pred$obs, predictor = obs_pred$pred)
mcc_f1_summary <- summary(mcc_f1)
threshold <- mcc_f1_summary$best_threshold[1]

# calibration model
calibration_model <- scam(obs ~ s(pred, k = 6, bs = "mpi"), 
                          gamma = 2,
                          data = obs_pred)
```
